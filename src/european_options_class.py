# -*- coding: utf-8 -*-
"""Copy of european_options_class.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FljNv_3z3SOaI61Lt8_5XF6fFiskB5CO

Payoff of European call with 
strike $K$ and exercise price $S$ is given as
$$C(S, K)= (S - K)^+ = \max\{S- K, 0\}.$$
Similarly European put with 
strike $K$ and exercise price $S$ is given as
$$P(S, K)= (S - K)^- = \max\{-S+ K, 0\}.$$

Next, we create call/put class
"""

'''=========
option class init
=========='''
class VanillaOption:
    def __init__(
        self,
        otype = 1, # 1: 'call'
                  # -1: 'put'
        strike = 110.,
        maturity = 1.,
        market_price = 10.):
      self.otype = otype
      self.strike = strike
      self.maturity = maturity
      self.market_price = market_price #this will be used for calibration
      
        
    def payoff(self, s): #s: excercise price
      otype = self.otype
      k = self.strike
      maturity = self.maturity
      return np.max([0, (s - k)*otype])
